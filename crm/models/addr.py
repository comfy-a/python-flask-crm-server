# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from crm.models.base_model_ import Model
from crm import util


class Addr(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, zip_no: str=None, base_addr: str=None, detail_addr: str=None):  # noqa: E501
        """Addr - a model defined in Swagger

        :param zip_no: The zip_no of this Addr.  # noqa: E501
        :type zip_no: str
        :param base_addr: The base_addr of this Addr.  # noqa: E501
        :type base_addr: str
        :param detail_addr: The detail_addr of this Addr.  # noqa: E501
        :type detail_addr: str
        """
        self.swagger_types = {
            'zip_no': str,
            'base_addr': str,
            'detail_addr': str
        }

        self.attribute_map = {
            'zip_no': 'zip_no',
            'base_addr': 'base_addr',
            'detail_addr': 'detail_addr'
        }

        self._zip_no = zip_no
        self._base_addr = base_addr
        self._detail_addr = detail_addr

    @classmethod
    def from_dict(cls, dikt) -> 'Addr':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Addr of this Addr.  # noqa: E501
        :rtype: Addr
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zip_no(self) -> str:
        """Gets the zip_no of this Addr.


        :return: The zip_no of this Addr.
        :rtype: str
        """
        return self._zip_no

    @zip_no.setter
    def zip_no(self, zip_no: str):
        """Sets the zip_no of this Addr.


        :param zip_no: The zip_no of this Addr.
        :type zip_no: str
        """

        self._zip_no = zip_no

    @property
    def base_addr(self) -> str:
        """Gets the base_addr of this Addr.


        :return: The base_addr of this Addr.
        :rtype: str
        """
        return self._base_addr

    @base_addr.setter
    def base_addr(self, base_addr: str):
        """Sets the base_addr of this Addr.


        :param base_addr: The base_addr of this Addr.
        :type base_addr: str
        """

        self._base_addr = base_addr

    @property
    def detail_addr(self) -> str:
        """Gets the detail_addr of this Addr.


        :return: The detail_addr of this Addr.
        :rtype: str
        """
        return self._detail_addr

    @detail_addr.setter
    def detail_addr(self, detail_addr: str):
        """Sets the detail_addr of this Addr.


        :param detail_addr: The detail_addr of this Addr.
        :type detail_addr: str
        """

        self._detail_addr = detail_addr
